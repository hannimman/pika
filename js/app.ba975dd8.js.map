{"version":3,"file":"js/app.ba975dd8.js","mappings":"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","sources":["webpack://ora-wizard/./src/App.vue","webpack://ora-wizard/./src/App.vue?7ccd","webpack://ora-wizard/./src/components/Home/HelloWorld.vue","webpack://ora-wizard/./src/components/Home/HelloWorld.vue?25ed","webpack://ora-wizard/./src/utils/dateUtil.js","webpack://ora-wizard/./src/components/Tool/DateWizard/DateWizard.vue","webpack://ora-wizard/./src/components/Tool/DateWizard/DateWizard.vue?ec15","webpack://ora-wizard/./src/components/Fun/Tetris/FunTetris.vue","webpack://ora-wizard/./src/components/Fun/Tetris/FunTetris.vue?d4df","webpack://ora-wizard/./src/router/index.js","webpack://ora-wizard/./src/main.js","webpack://ora-wizard/webpack/bootstrap","webpack://ora-wizard/webpack/runtime/chunk loaded","webpack://ora-wizard/webpack/runtime/compat get default export","webpack://ora-wizard/webpack/runtime/define property getters","webpack://ora-wizard/webpack/runtime/global","webpack://ora-wizard/webpack/runtime/hasOwnProperty shorthand","webpack://ora-wizard/webpack/runtime/make namespace object","webpack://ora-wizard/webpack/runtime/jsonp chunk loading","webpack://ora-wizard/webpack/startup"],"sourcesContent":["<template>\n  <el-container class=\"layout-container\">\n    <el-aside \n      :style=\"{width: isCollapsed ? '60px' : '200px'}\"\n      :collapse=\"isCollapsed\"\n      @mouseenter=\"isCollapsed=false\"\n      @mouseleave=\"isCollapsed=true\">\n      <el-scrollbar>\n        <el-menu \n          :default-openeds=\"['1']\" \n          :default-active=\"routerPath\" \n          :collapse=\"isCollapsed\"\n          router>\n          <el-sub-menu index=\"1\">\n            <template #title>\n              <el-icon><EditPen /></el-icon>\n              <span>안녕</span>\n            </template>\n              <el-menu-item v-for=\"item in menuItems\" :key=\"item.name\" :index=\"item.path\" @click=\"item.clickable ? item.click() : null\">\n                {{ item.name }}\n              </el-menu-item>\n          </el-sub-menu>\n          \n          <el-sub-menu index=\"3\">\n            <template #title>\n              <el-icon><Setting /></el-icon>\n              <span>누르지마세요</span>\n            </template>\n            <el-menu-item-group>\n              <template #title>안 누르기</template>\n              <el-menu-item index=\"없음1\" @click=\"open\"><el-icon><Close /></el-icon>없음1</el-menu-item>\n              <el-menu-item index=\"없음2\" @click=\"open\"><el-icon><NoSmoking /></el-icon>없음2</el-menu-item>\n            </el-menu-item-group>\n          </el-sub-menu>\n        </el-menu>\n      </el-scrollbar>\n    </el-aside>\n\n    <el-container>\n      <el-header style=\"text-align: right; font-size: 12px\">\n        <div class=\"toolbar\">\n          <div class=\"d-flex align-item-center\">\n            <!-- <el-avatar\n            class=\"mr-3\"\n            :size=\"32\"\n            src=\"https://raw.githubusercontent.com/jeanguyomarch/pikalogy/master/images/pika_01.png\"\n            /> -->\n            <!-- <el-image class=\"mr-3\" src=\"https://raw.githubusercontent.com/jeanguyomarch/pikalogy/master/images/pika_01.png\"></el-image> -->\n            <el-text size=\"large\" tag=\"b\">{{ routerName }}</el-text>\n          </div>\n          <!-- </div> -->\n          <div class=\"right-content\">\n            <router-link to=\"/\"> <!--집으로가-->\n            <el-link :underline=\"false\" ><el-icon><HomeFilled /></el-icon></el-link>\n          </router-link>\n          </div>\n        </div>\n      </el-header>\n\n      <el-main>\n        <el-scrollbar>\n          <router-view></router-view>\n        </el-scrollbar>\n      </el-main>\n    </el-container>\n  </el-container>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\n\n//라우터관련\nconst route = useRoute()\nconst routerName = ref()\nconst routerPath = ref(route.path)\n\n//사이드메뉴\nconst isCollapsed = ref(true)\n\nwatch(\n  [() => route.meta.korean, () => route.path], \n  ([newName, newPath]) => {\n    routerName.value = newName\n    routerPath.value = newPath\n  }\n)\n\nconst open = () => {\n  //ElMessage('없음')\n  ElMessage({\n    message: '없음',\n    type: 'error',\n    icon: 'apple'\n  })\n}\n\nconst menuItems = [\n    {\n      name: \"따옴표\",\n      path: \"/\",\n      clickable: false,\n    },\n    {\n      name: \"날짜\",\n      path: \"/DateWizard\",\n      clickable: false,\n    },\n    {\n      name: \"😇\",\n      path: \"Tetris\",\n      clickable: false,\n      // click: open,\n    }\n  ]\n\n</script>\n\n<style scoped>\n.layout-container {\n  height: 100vh;\n}\n.layout-container .el-header {\n  position: relative;\n  background-color: var(--el-color-primary-light-7);\n  color: var(--el-text-color-primary);\n}\n.layout-container .el-aside {\n  height: 100%;\n  color: var(--el-text-color-primary);\n  background: var(--el-color-primary-light-8);\n}\n.layout-container .el-menu {\n  border-right: none;\n}\n.layout-container .el-main {\n  padding: 0;\n}\n.layout-container .toolbar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n  padding: 0 20px;\n}\n.radius {\n  border: 1px solid var(--el-border-color);\n  border-radius: 0;\n  padding: 10px;\n}\n\n.d-flex {\n  display: flex;\n}\n\n.align-items-center {\n  align-items: center;\n}\n\n.mr-3 {\n  margin-right: 1rem; /* Tailwind CSS나 다른 CSS framework에서 지원되지 않는 경우 수동으로 정의 */\n}\n\n.el-aside {\n  transition: width 0.2s;\n}\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4b9f116c&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4b9f116c\"]])\n\nexport default __exports__","<template>\n  <div class=\"fullscreen-iframe\">\n    <iframe\n      :src=\"iframeUrl\"\n      frameborder=\"0\"\n      allowfullscreen\n    ></iframe>\n  </div>\n</template>\n\n<script setup>\nconst iframeUrl = \"https://hannimman.github.io/QuoteMaker/\"\n</script>\n\n<style scoped>\n.fullscreen-iframe {\n    flex: 1; /* 자식 컴포넌트가 가능한 높이와 너비를 모두 차지하도록 설정 */\n    background-color: #f0f0f0; /* 배경색 설정 (선택 사항) */\n    display: flex;\n    height: 92vh;\n}\n\n.fullscreen-iframe iframe {\n  flex: 1;\n  display: flex;\n}\n</style>","import script from \"./HelloWorld.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HelloWorld.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=591feeb2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-591feeb2\"]])\n\nexport default __exports__","class DateUtil {\r\n    constructor(text, originVal, format, color) {\r\n        this.text = text;\r\n        this.originVal = originVal\r\n        this.format = format;\r\n        this.color = color;\r\n    }\r\n\r\n    static #query = [\r\n        {\r\n            key: '투캐릭터',\r\n            text: `TO_CHAR(#val, '#formmater')`\r\n        },\r\n        {\r\n            key: '투데이트',\r\n            text: `TO_DATE(#val, 'YYYYMMDD')`\r\n        },\r\n        {\r\n            key: '1일투데이트',\r\n            text: `TO_DATE(#val || '01', 'YYYYMMDD')`\r\n        },\r\n        {\r\n            key: '말일',\r\n            text: `LAST_DAY(#val)`\r\n        },\r\n        {\r\n            key: '1일시분초',\r\n            text: `TO_DATE(#val || '01 23:59:59', 'YYYY-MM-DD HH24:MI:SS')`\r\n        },\r\n        {\r\n            key: '시분초',\r\n            text: `TO_DATE(#val || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')`\r\n        },\r\n        {\r\n            key: '애드먼스',\r\n            text: `ADD_MONTHS(#val, 1)`\r\n        },\r\n        {\r\n            key: '막대기없애기',\r\n            text: `REPLACE(#val, '-', '')`\r\n        },\r\n        {\r\n            key: '트렁크',\r\n            text: `TRUNC(#val)`\r\n        },\r\n        {\r\n            key: '콘캣',\r\n            text: `CONCAT(#val, '01')`\r\n        },\r\n        {\r\n            key: 'YYYYMM자르기',\r\n            text: `SUBSTR(#val, 1, 6)`\r\n        }\r\n    ]\r\n\r\n    //key로 쿼리 가지고오기\r\n    static getQuery(key) {\r\n        const item = this.#query.find((obj) => obj.key === key);\r\n        return item ? item.text : null;\r\n    }\r\n\r\n    //쿼리 세팅\r\n    static changeDate(key, val, originVal, formmater, color) {\r\n        const text = this.getQuery(key).replace('#formmater', formmater);\r\n        let hex = color;\r\n        if(color == null) { //==는 null과 undefined를 동등하게 처리 ===는 타입 구분함\r\n            const hue = Math.floor(Math.random() * 360);\r\n            const saturation = 70 + Math.floor(Math.random() * 30); // 채도: 70% ~ 100%\r\n            const lightness = 70 + Math.floor(Math.random() * 30); // 밝기: 70% ~ 100%\r\n\r\n            // HSL을 RGB로 변환하여 HEX 코드로 변환\r\n            const hslToHex = (h, s, l) => {\r\n                s /= 100;\r\n                l /= 100;\r\n                const k = n => (n + h / 30) % 12;\r\n                const a = s * Math.min(l, 1 - l);\r\n                const f = n => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\r\n                const toHex = x => Math.round(255 * x).toString(16).padStart(2, '0');\r\n                \r\n                const r = toHex(f(0));\r\n                const g = toHex(f(8));\r\n                const b = toHex(f(4));\r\n                \r\n                return `#${r}${g}${b}`;\r\n            };\r\n\r\n            hex = hslToHex(hue, saturation, lightness)\r\n        }\r\n\r\n        return new DateUtil(val, originVal, text, hex);\r\n    }\r\n\r\n    //스팬씌우기 체이닝 함수\r\n    toSpan() {\r\n        const parts = this.format.split('#val');\r\n        const result = `<span style=\"color:${this.color}\" onmouseover='this.style.backgroundColor=\"yellow\"' onmouseleave='this.style.backgroundColor=\"\"'>${parts[0]}</span>#val<span style=\"color:${this.color}\" onmouseover='this.style.backgroundColor=\"yellow\"' onmouseleave='this.style.backgroundColor=\"\"'>${parts[1]}</span>`.replace('#val', this.text).replace(this.originVal, '#val');\r\n        return result;\r\n    }\r\n\r\n    //플레인 텍스트 체이닝 함수\r\n    toText() {\r\n        return this.format.replace('#val', this.text).replace(this.originVal, '#val');\r\n    }\r\n}\r\n\r\nexport default DateUtil;","<template>\r\n  <div style=\"margin: 15px;\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <h4>기준일</h4>\r\n        <div style=\"margin-bottom: 20px;\">\r\n          <el-radio-group v-model=\"rdoValType\" @change=\"changeRadio\">\r\n            <el-radio-button label=\"PROC_YM\" value=\"procym\" />\r\n            <el-radio-button label=\"PROC_DATE\" value=\"procdate\" />\r\n            <el-radio-button label=\"날짜\" value=\"date\" />\r\n          </el-radio-group>\r\n        </div>\r\n        <el-date-picker\r\n          v-if=\"rdoValType === 'date'\"\r\n          v-model=\"input1\"\r\n          type=\"date\"\r\n          value-format=\"YYYY-MM-DD\"\r\n          placeholder=\"YYYY-MM-DD\"\r\n          ></el-date-picker>\r\n        <el-input\r\n          v-if=\"rdoValType !== 'date'\"\r\n          v-model=\"input1\"></el-input>\r\n\r\n        <el-button type=\"success\" :icon=\"Refresh\" style=\"margin-bottom: 20px;\" @click=\"refresh\"></el-button>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row>\r\n      <div class=\"mb-4\">\r\n        <!-- <el-button type=\"primary\" round @click=\"changeDate('투캐릭터')\">TO_CHAR</el-button> -->\r\n        <el-button type=\"primary\" round @click=\"changeDate('투캐릭터', selectedOption)\" style=\"position: relative; margin: 4px;\">TO_CHAR&nbsp;&nbsp;\r\n          <el-select\r\n            v-model=\"selectedOption\"\r\n            size=\"small\"\r\n            style=\"width: 150px;\"\r\n            @change=\"changeToCharFormat\"\r\n            @click.stop\r\n          >\r\n            <el-option label=\"YYYY-MM-DD\" value=\"YYYY-MM-DD\"></el-option>\r\n            <el-option label=\"YYYYMMDD\" value=\"YYYYMMDD\"></el-option>\r\n            <el-option label=\"YYYYMM\" value=\"YYYYMM\"></el-option>\r\n          </el-select>\r\n        </el-button>\r\n\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('투데이트')\">TO_DATE</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('1일투데이트')\">1일</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('말일')\">말일</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('1일시분초')\">1일시분초</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('시분초')\">시분초</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('애드먼스')\">ADD_MONTHS</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('막대기없애기')\">막대기없애기</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('트렁크')\">TRUNC</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('콘캣')\">CONCAT</el-button>\r\n        <el-button type=\"primary\" round style=\"margin: 4px;\" @click=\"changeDate('YYYYMM자르기')\">YYYYMM자르기</el-button>\r\n      </div>\r\n    </el-row>\r\n    <el-row>\r\n      <el-col :span=\"24\">\r\n        <div\r\n          style=\"display: flex;\r\n                align-items: center;\r\n                gap: 15px;\">\r\n          <el-button type=\"primary\" :icon=\"ArrowLeftBold\" circle @click=\"undo\"> </el-button>\r\n          <el-button type=\"primary\" circle @click=\"copyToClipboard\">\r\n            <el-icon>\r\n              <component :is=\"copiedStates ? 'Select' : 'DocumentCopy'\" />\r\n            </el-icon>\r\n          </el-button>\r\n          <div\r\n            style=\"border-radius: var(--el-border-radius-base);\r\n                  border: 1px solid var(--el-border-color);\r\n                  word-wrap: break-word;\r\n                  overflow-wrap: break-word;\r\n                  padding: 10px;\r\n                  flex: 1;\">\r\n            <p v-html=\"resultValue\"></p>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row>\r\n      <el-col :span=\"24\">\r\n        {{ changeHistoryKR.join(' >') }}\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n  <!-- <PROC_YM :proc_ym=\"input1\"></PROC_YM> -->\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue'\r\nimport { ArrowLeftBold, DocumentCopy, Refresh } from '@element-plus/icons-vue'\r\n// import PROC_YM from './DateWizard_ProcYM.vue'\r\n// import PROC_DATE from './DateWizard_ProcDate.vue'\r\nimport {format} from 'date-fns'\r\nimport DateUtil from '@/utils/dateUtil'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst rdoValType = ref('procym') //라디오버튼\r\nconst input1 = ref('P_PROC_YM') //기준값\r\nconst today = new Date()\r\nconst resultValue = ref(input1.value)\r\nconst resultText = ref(input1.value)\r\nconst changeHistory = ref([])\r\nconst changeHistoryKR = ref([])\r\nconst copiedStates = ref(false) // 각각의 버튼 상태를 저장할 배열\r\nconst selectedOption = ref('YYYY-MM-DD')\r\n\r\n\r\nwatch(input1, (newName) => {\r\n    if(changeHistory.value.length > 0){\r\n      resultValue.value = changeHistory.value.at(-1).html.replace('#val', newName)\r\n    } else {\r\n      resultValue.value = input1.value\r\n      resultText.value = input1.value\r\n    }\r\n  }\r\n)\r\n\r\n//to_char에 select 옵션 변경\r\nconst changeToCharFormat = (val) => {\r\n  selectedOption.value = val\r\n}\r\n\r\n//카피하기\r\nconst copyToClipboard = () => {\r\n  const text = resultText.value.replace('#val', rdoValType.value === 'date' ? `'${input1.value}'` : input1.value)\r\n  navigator.clipboard.writeText(text).then(() => {\r\n    copiedStates.value = true // 클릭한 버튼의 상태를 true로 설정\r\n    setTimeout(() => {\r\n      copiedStates.value = false // 2초 후 원래 상태로 복원\r\n    }, 2000)\r\n    ElMessage({\r\n      message: '클립보드에 복사되었습니다',\r\n      type: 'success'\r\n    })\r\n  }).catch((err) => {\r\n    console.error('클립보드 복사 실패: ', err)\r\n  });\r\n};\r\n\r\n//초기화\r\nconst refresh = () => {\r\n  rdoValType.value = 'procym' //라디오버튼\r\n  input1.value = 'P_PROC_YM'\r\n  changeHistory.value = []\r\n  changeHistoryKR.value = []\r\n  resultValue.value = input1.value\r\n  resultText.value = input1.value\r\n}\r\n\r\n//라디오변경\r\nconst changeRadio = () => {\r\n  if(rdoValType.value === 'procym') {\r\n    input1.value = 'P_PROC_YM'\r\n    /* eslint-disable no-debugger */\r\n    // debugger\r\n    /* eslint-enable no-debugger */\r\n  } else if (rdoValType.value === 'procdate') {\r\n    input1.value = 'P_PROC_DATE'\r\n  } else {\r\n    \r\n    input1.value = format(today, 'yyyy-MM-dd')\r\n    /* eslint-disable no-debugger */\r\n    // debugger\r\n    /* eslint-enable no-debugger */\r\n  }\r\n}\r\n\r\n//날짜 변환\r\nconst changeDate = (type, format) => {\r\n  const result = DateUtil.changeDate(type, resultValue.value, input1.value, format == null ? 'YYYY-MM-DD' : format)\r\n      resultValue.value = result.toSpan().replace('#val', input1.value)\r\n      resultText.value = DateUtil.changeDate(type, resultText.value, input1.value, format == null ? 'YYYY-MM-DD' : format).toText()\r\n\r\n      changeHistory.value.push({\r\n        html: result.toSpan(),\r\n        plainText: resultText.value\r\n      })\r\n\r\n      changeHistoryKR.value.push(type)\r\n}\r\n\r\n//되돌리기\r\nconst undo = () => {\r\n  if(changeHistory.value.length > 1) {\r\n    changeHistory.value.pop()\r\n    changeHistoryKR.value.pop()\r\n\r\n    resultValue.value = changeHistory.value.at(-1).html.replace('#val', input1.value)\r\n    resultText.value = changeHistory.value.at(-1).plainText  \r\n  } else if (changeHistory.value.length == 1) {\r\n    changeHistory.value.pop()\r\n    changeHistoryKR.value.pop()\r\n\r\n    resultValue.value = input1.value\r\n    resultText.value = input1.value\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.el-row{\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-row:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.el-input{\r\n  width: 400px;\r\n  margin-bottom: 20px;\r\n  margin-right: 20px;\r\n}\r\n\r\n</style>","import script from \"./DateWizard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateWizard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DateWizard.vue?vue&type=style&index=0&id=0d14b330&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"tetris-game\">\r\n    <!-- 게임 시작 오버레이 -->\r\n    <div v-if=\"gameState.status === 'ready'\" class=\"game-overlay start-overlay\">\r\n      <div class=\"message-box\">\r\n        <h2>벽돌💫</h2>\r\n        <p>PRESS START</p>\r\n        <button @click=\"startGame\" class=\"start-button\">누르면 시작</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 게임 오버 오버레이 -->\r\n    <div v-if=\"gameState.status === 'gameover'\" class=\"game-overlay end-overlay\">\r\n      <div class=\"message-box\">\r\n        <h2>끝</h2>\r\n        <p>SCORE: {{ score }}</p>\r\n        <button @click=\"startGame\" class=\"restart-button\">다시 시작</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 일시정지 오버레이 추가 -->\r\n    <div v-if=\"gameState.status === 'paused'\" class=\"game-overlay pause-overlay\">\r\n      <div class=\"message-box\">\r\n        <h2>일시정지</h2>\r\n        <p>ESC 또는 P 를 눌러 이어하기</p>\r\n        <div class=\"control-info\">\r\n          <p>Controls:</p>\r\n          <ul>\r\n            <li>← → : 이동</li>\r\n            <li>↑ : 회전</li>\r\n            <li>↓ : 블록 내리기</li>\r\n            <li>Space : 빨리 내리기</li>\r\n            <li>ESC/P : 일시정지</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 레벨 업 이펙트 -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"showLevelUp\" class=\"level-up-overlay\">\r\n        <div class=\"level-up-message\">\r\n          <div class=\"level-text\">LEVEL {{ currentLevel }}</div>\r\n          <div class=\"speed-text\">SPEED UP!</div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n    <!-- 기존 게임 컨텐츠 -->\r\n    <div class=\"tetris\">\r\n      <div class=\"stars-effect\"></div>\r\n      \r\n      <div class=\"background\">\r\n        <div class=\"text-container\" aria-hidden=\"true\">\r\n          <span v-for=\"n in 20\" :key=\"n\">Hannim</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"game-layout\">\r\n        <!-- 메인 게임 캔버스 -->\r\n        <div class=\"canvas-container\">\r\n          <canvas ref=\"gameBoard\" width=\"300\" height=\"600\"></canvas>\r\n          <div class=\"neon-border\"></div>\r\n        </div>\r\n\r\n        <!-- 우측 정보 패널 -->\r\n        <div class=\"info-panel\">\r\n          <!-- 스코어보드 -->\r\n          <div class=\"score-board\">\r\n            <div class=\"digital-display\">\r\n              <div class=\"display-label\">SCORE</div>\r\n              <div class=\"display-value\">{{ String(score).padStart(6, '0') }}</div>\r\n            </div>\r\n            <!-- 레벨 표시 추가 -->\r\n            <div class=\"digital-display level-display\">\r\n              <div class=\"display-label\">LEVEL</div>\r\n              <div class=\"display-value\">{{ currentLevel }}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 다음 블록 미리보기 -->\r\n          <div class=\"next-piece\">\r\n            <div class=\"preview-label\">NEXT</div>\r\n            <canvas ref=\"nextPieceCanvas\" width=\"120\" height=\"120\"></canvas>\r\n            <div class=\"neon-border\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.tetris-game {\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.tetris-game .tetris {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background-color: #000033;\r\n}\r\n\r\n.tetris-game .stars-effect {\r\n  position: absolute;\r\n  inset: 0;\r\n  background-image: \r\n    radial-gradient(white, rgba(255,255,255,.2) 2px, transparent 4px),\r\n    radial-gradient(white, rgba(255,255,255,.15) 1px, transparent 3px),\r\n    radial-gradient(white, rgba(255,255,255,.1) 2px, transparent 4px);\r\n  background-size: 550px 550px, 350px 350px, 250px 250px;\r\n  background-position: 0 0, 40px 60px, 130px 270px;\r\n  animation: twinkle 15s linear infinite;\r\n}\r\n\r\n.tetris-game .background {\r\n  position: absolute;\r\n  inset: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.tetris-game .text-container {\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: 200%;\r\n  height: 200%;\r\n  animation: slide 40s linear infinite;\r\n  transform: rotate(-45deg);\r\n}\r\n\r\n.tetris-game .text-container span {\r\n  position: absolute;\r\n  color: rgba(255, 255, 255, 0.1);\r\n  font-size: 2rem;\r\n  font-family: 'Arial', sans-serif;\r\n  white-space: nowrap;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n}\r\n\r\n.tetris-game .text-container span:nth-child(1) { top: 5%; left: 5%; }\r\n.tetris-game .text-container span:nth-child(2) { top: 15%; left: 25%; }\r\n.tetris-game .text-container span:nth-child(3) { top: 25%; left: 45%; }\r\n.tetris-game .text-container span:nth-child(4) { top: 35%; left: 65%; }\r\n.tetris-game .text-container span:nth-child(5) { top: 45%; left: 85%; }\r\n.tetris-game .text-container span:nth-child(6) { top: 55%; left: 5%; }\r\n.tetris-game .text-container span:nth-child(7) { top: 65%; left: 25%; }\r\n.tetris-game .text-container span:nth-child(8) { top: 75%; left: 45%; }\r\n.tetris-game .text-container span:nth-child(9) { top: 85%; left: 65%; }\r\n.tetris-game .text-container span:nth-child(10) { top: 95%; left: 85%; }\r\n\r\n.tetris-game .game-layout {\r\n  position: relative;\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: flex-start;\r\n  z-index: 3;\r\n}\r\n\r\n.tetris-game .canvas-container {\r\n  position: relative;\r\n  padding: 3px;\r\n}\r\n\r\n.tetris-game .neon-border {\r\n  position: absolute;\r\n  inset: 0;\r\n  border: 2px solid #00FFFF;\r\n  box-shadow: \r\n    0 0 5px #00FFFF,\r\n    0 0 10px #00FFFF,\r\n    0 0 15px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n  pointer-events: none;\r\n}\r\n\r\n.tetris-game .info-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n/* 스코어보드 스타일 */\r\n.tetris-game .score-board {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  padding: 15px;\r\n  border: 2px solid #00FFFF;\r\n  box-shadow: \r\n    0 0 5px #00FFFF,\r\n    0 0 10px #00FFFF;\r\n}\r\n\r\n.tetris-game .digital-display {\r\n  font-family: 'Digital-7', monospace;\r\n  color: #00FFFF;\r\n  text-align: center;\r\n}\r\n\r\n.tetris-game .display-label {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 5px;\r\n  text-shadow: 0 0 5px #00FFFF;\r\n}\r\n\r\n.tetris-game .display-value {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  text-shadow: \r\n    0 0 5px #00FFFF,\r\n    0 0 10px #00FFFF;\r\n  animation: glow 1.5s ease-in-out infinite alternate;\r\n}\r\n\r\n/* 다음 블록 미리보기 스타일 */\r\n.tetris-game .next-piece {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  padding: 15px;\r\n  position: relative;\r\n}\r\n\r\n.tetris-game .preview-label {\r\n  color: #00FFFF;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  text-shadow: 0 0 5px #00FFFF;\r\n}\r\n\r\n.tetris-game button {\r\n  position: relative;\r\n  z-index: 3;\r\n  background-color: transparent;\r\n  border: 2px solid #00FFFF;\r\n  color: #00FFFF;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 0 5px #00FFFF;\r\n}\r\n\r\n.tetris-game button:hover {\r\n  background-color: #00FFFF;\r\n  color: #000;\r\n  box-shadow: \r\n    0 0 10px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n}\r\n\r\n@keyframes slide {\r\n  0% {\r\n    transform: rotate(-45deg) translateY(0);\r\n  }\r\n  100% {\r\n    transform: rotate(-45deg) translateY(100%);\r\n  }\r\n}\r\n\r\n@keyframes glow {\r\n  from {\r\n    text-shadow: \r\n      0 0 5px #00FFFF,\r\n      0 0 10px #00FFFF,\r\n      0 0 15px #00FFFF;\r\n  }\r\n  to {\r\n    text-shadow: \r\n      0 0 10px #00FFFF,\r\n      0 0 20px #00FFFF,\r\n      0 0 30px #00FFFF;\r\n  }\r\n}\r\n\r\n@keyframes twinkle {\r\n  0% { opacity: 0.5; }\r\n  50% { opacity: 1; }\r\n  100% { opacity: 0.5; }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .tetris-game .text-container span {\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  .tetris-game .game-layout {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .tetris-game .info-panel {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.tetris-game .game-overlay {\r\n  position: absolute;\r\n  inset: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  z-index: 10;\r\n}\r\n\r\n.tetris-game .message-box {\r\n  text-align: center;\r\n  color: #00FFFF;\r\n  padding: 2rem;\r\n  border: 2px solid #00FFFF;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  box-shadow: \r\n    0 0 10px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n  animation: messageAppear 0.5s ease-out;\r\n}\r\n\r\n.tetris-game .message-box h2 {\r\n  font-size: 3rem;\r\n  margin: 0 0 1rem;\r\n  font-family: 'Press Start 2P', cursive;\r\n  text-shadow: \r\n    0 0 10px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n  animation: glowText 1.5s ease-in-out infinite alternate;\r\n}\r\n\r\n.tetris-game .message-box p {\r\n  font-size: 1.5rem;\r\n  margin: 1rem 0;\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n.tetris-game .start-overlay .message-box {\r\n  transform-origin: center;\r\n  animation: messageZoomIn 0.5s ease-out;\r\n}\r\n\r\n.tetris-game .end-overlay .message-box {\r\n  animation: messageShake 0.5s ease-out;\r\n}\r\n\r\n.tetris-game .message-box button {\r\n  margin-top: 1rem;\r\n  padding: 0.8rem 2rem;\r\n  font-size: 1.2rem;\r\n  background: transparent;\r\n  border: 2px solid #00FFFF;\r\n  color: #00FFFF;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tetris-game .message-box button:hover {\r\n  background: #00FFFF;\r\n  color: #000;\r\n  box-shadow: \r\n    0 0 10px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n}\r\n\r\n@keyframes messageZoomIn {\r\n  0% {\r\n    transform: scale(0);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes messageShake {\r\n  0%, 100% { transform: translateX(0); }\r\n  20%, 60% { transform: translateX(-10px); }\r\n  40%, 80% { transform: translateX(10px); }\r\n}\r\n\r\n@keyframes glowText {\r\n  from {\r\n    text-shadow: \r\n      0 0 10px #00FFFF,\r\n      0 0 20px #00FFFF,\r\n      0 0 30px #00FFFF;\r\n  }\r\n  to {\r\n    text-shadow: \r\n      0 0 20px #00FFFF,\r\n      0 0 30px #00FFFF,\r\n      0 0 40px #00FFFF;\r\n  }\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 100% { opacity: 1; }\r\n  50% { opacity: 0.5; }\r\n}\r\n\r\n@keyframes messageAppear {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(-20px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n@keyframes fadeOut {\r\n  0% {\r\n    opacity: 1;\r\n    transform: translate(-50%, -50%) scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%) scale(1.5);\r\n  }\r\n}\r\n\r\n/* 레벨 표시 스타일 */\r\n.level-display {\r\n  margin-top: 20px;\r\n  border-color: #FF00FF; /* 레벨은 다른 색상으로 구분 */\r\n}\r\n\r\n.level-display .display-value {\r\n  color: #FF00FF;\r\n  text-shadow: \r\n    0 0 5px #FF00FF,\r\n    0 0 10px #FF00FF;\r\n}\r\n\r\n/* 레벨 업 효과 스타일 */\r\n.level-up-container {\r\n  position: absolute;\r\n  inset: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  pointer-events: none;\r\n  perspective: 1000px;\r\n}\r\n\r\n.level-up-message {\r\n  background: rgba(0, 0, 0, 0.9);\r\n  padding: 30px;\r\n  border: 3px solid #FF00FF;\r\n  box-shadow: \r\n    0 0 20px #FF00FF,\r\n    0 0 40px #FF00FF;\r\n  text-align: center;\r\n  animation: messageZoom 2s cubic-bezier(0.4, 0, 0.2, 1);\r\n  transform-style: preserve-3d;\r\n}\r\n\r\n.level-text {\r\n  font-size: 36px;\r\n  color: #FF00FF;\r\n  font-family: 'Press Start 2P', cursive;\r\n  margin-bottom: 15px;\r\n  text-shadow: \r\n    0 0 10px #FF00FF,\r\n    0 0 20px #FF00FF;\r\n  animation: textPulse 0.5s infinite alternate;\r\n}\r\n\r\n.speed-text {\r\n  font-size: 24px;\r\n  color: #00FFFF;\r\n  font-family: 'Press Start 2P', cursive;\r\n  text-shadow: \r\n    0 0 10px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n  animation: textSlide 0.5s ease-out;\r\n}\r\n\r\n.particle {\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background: #FF00FF;\r\n  border-radius: 50%;\r\n  animation: particleExplode 2s ease-out forwards;\r\n  animation-delay: var(--delay);\r\n  transform: rotate(var(--rotation)) translateY(0);\r\n}\r\n\r\n@keyframes messageZoom {\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale(0) rotateX(720deg);\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n    transform: scale(1.2) rotateX(0);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(0) rotateY(720deg);\r\n  }\r\n}\r\n\r\n@keyframes textPulse {\r\n  0% {\r\n    transform: scale(1);\r\n    text-shadow: \r\n      0 0 10px #FF00FF,\r\n      0 0 20px #FF00FF;\r\n  }\r\n  100% {\r\n    transform: scale(1.1);\r\n    text-shadow: \r\n      0 0 20px #FF00FF,\r\n      0 0 40px #FF00FF,\r\n      0 0 60px #FF00FF;\r\n  }\r\n}\r\n\r\n@keyframes textSlide {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n@keyframes particleExplode {\r\n  0% {\r\n    opacity: 1;\r\n    transform: rotate(var(--rotation)) translateY(0);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: rotate(var(--rotation)) translateY(100vh);\r\n  }\r\n}\r\n\r\n.pause-overlay {\r\n  background: rgba(0, 0, 0, 0.8);\r\n  z-index: 100;\r\n}\r\n\r\n.pause-overlay .message-box {\r\n  background: rgba(0, 0, 0, 0.9);\r\n  padding: 2rem;\r\n  border: 2px solid #00FFFF;\r\n  box-shadow: \r\n    0 0 10px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n  text-align: center;\r\n  animation: pauseAppear 0.3s ease-out;\r\n}\r\n\r\n.pause-overlay h2 {\r\n  font-size: 2.5rem;\r\n  color: #00FFFF;\r\n  margin: 0 0 1rem;\r\n  font-family: 'Press Start 2P', cursive;\r\n  text-shadow: \r\n    0 0 10px #00FFFF,\r\n    0 0 20px #00FFFF;\r\n  animation: pausePulse 1.5s ease-in-out infinite alternate;\r\n}\r\n\r\n.pause-overlay p {\r\n  color: #00FFFF;\r\n  font-size: 1rem;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.control-info {\r\n  margin-top: 2rem;\r\n  text-align: left;\r\n  color: #FFFFFF;\r\n}\r\n\r\n.control-info ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.control-info li {\r\n  margin: 0.5rem 0;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n@keyframes pauseAppear {\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale(0.8);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n@keyframes pausePulse {\r\n  0% {\r\n    text-shadow: \r\n      0 0 10px #00FFFF,\r\n      0 0 20px #00FFFF;\r\n  }\r\n  100% {\r\n    text-shadow: \r\n      0 0 20px #00FFFF,\r\n      0 0 40px #00FFFF,\r\n      0 0 60px #00FFFF;\r\n  }\r\n}\r\n\r\n/* 레벨 업 효과 스타일 단순화 */\r\n.level-up-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  animation: fadeIn 0.3s ease-out;\r\n}\r\n\r\n.level-up-message {\r\n  background: rgba(0, 0, 0, 0.9);\r\n  padding: 30px;\r\n  border: 3px solid #FF00FF;\r\n  box-shadow: 0 0 20px #FF00FF;\r\n  text-align: center;\r\n  animation: scaleIn 0.5s ease-out;\r\n}\r\n\r\n.level-text {\r\n  font-size: 36px;\r\n  color: #FF00FF;\r\n  margin-bottom: 15px;\r\n  text-shadow: 0 0 10px #FF00FF;\r\n}\r\n\r\n.speed-text {\r\n  font-size: 24px;\r\n  color: #00FFFF;\r\n  text-shadow: 0 0 10px #00FFFF;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n\r\n@keyframes scaleIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.5);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n/* 트랜지션 효과 */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n// 상수 정의\r\nconst BLOCK_SIZE = 30;\r\nconst BOARD_WIDTH = 10;\r\nconst BOARD_HEIGHT = 20;\r\n\r\n// 블록 정의를 객체로 변경\r\nconst SHAPES = {\r\n  I: {\r\n    shape: [[1, 1, 1, 1]],\r\n    color: '#00f0f0'  // 밝은 시안\r\n  },\r\n  O: {\r\n    shape: [[1, 1], \r\n            [1, 1]],\r\n    color: '#f0f000'  // 밝은 노랑\r\n  },\r\n  T: {\r\n    shape: [[1, 1, 1],\r\n            [0, 1, 0]],\r\n    color: '#a000f0'  // 보라\r\n  },\r\n  L: {\r\n    shape: [[1, 1, 1],\r\n            [1, 0, 0]],\r\n    color: '#f0a000'  // 주황\r\n  },\r\n  J: {\r\n    shape: [[1, 1, 1],\r\n            [0, 0, 1]],\r\n    color: '#0000f0'  // 파랑\r\n  },\r\n  S: {\r\n    shape: [[0, 1, 1],\r\n            [1, 1, 0]],\r\n    color: '#00f000'  // 초록\r\n  },\r\n  Z: {\r\n    shape: [[1, 1, 0],\r\n            [0, 1, 1]],\r\n    color: '#f00000'  // 빨강\r\n  }\r\n};\r\n\r\n// 반응형 상태 정의\r\nconst gameBoard = ref(null);\r\nconst ctx = ref(null);\r\nconst score = ref(0);\r\nconst gameInterval = ref(null);\r\n\r\n// 게임 상태\r\nconst gameState = ref({\r\n  board: Array(BOARD_HEIGHT).fill().map(() => Array(BOARD_WIDTH).fill(0)),\r\n  currentPiece: null,\r\n  currentPieceX: 0,\r\n  currentPieceY: 0,\r\n  status: 'ready' // 'ready', 'playing', 'paused', 'gameover'\r\n});\r\n\r\n// 다음 블록 상태 추가\r\nconst nextPiece = ref(null);\r\nconst nextPieceCanvas = ref(null);\r\n\r\n// 게임 설정 상수 수정\r\nconst INITIAL_SPEED = 1000;  // 초기 속도 (1초)\r\nconst MIN_SPEED = 200;       // 최소 속도 (0.2초)\r\nconst SPEED_FACTOR = 0.8;    // 속도 증가 비율 (1.25배씩 빨라짐)\r\n\r\n// 현재 게임 속도 상태 추가\r\nconst gameSpeed = ref(INITIAL_SPEED);\r\n\r\n// 현재 블록의 색상을 저장할 상태 추가\r\nconst currentColor = ref('');\r\nconst nextColor = ref('');\r\n\r\nconst PLACED_BLOCK_COLOR = '#006666'; // 바닥에 놓인 블록의 어두운 청록색\r\n\r\n// 현재 레벨 상태 추가\r\nconst currentLevel = ref(1);\r\n\r\n// 레벨 업 이펙트 표시 상태\r\nconst showLevelUp = ref(false);\r\n\r\n// 게임 관련 메서드\r\nconst createPiece = () => {\r\n  if (nextPiece.value === null) {\r\n    const pieces = Object.keys(SHAPES);\r\n    const randomPiece = pieces[Math.floor(Math.random() * pieces.length)];\r\n    nextPiece.value = SHAPES[randomPiece].shape;\r\n    nextColor.value = SHAPES[randomPiece].color;\r\n  }\r\n  \r\n  gameState.value.currentPiece = nextPiece.value;\r\n  currentColor.value = nextColor.value;\r\n  \r\n  gameState.value.currentPieceX = Math.floor(BOARD_WIDTH / 2) - Math.floor(gameState.value.currentPiece[0].length / 2);\r\n  gameState.value.currentPieceY = 0;\r\n  \r\n  const pieces = Object.keys(SHAPES);\r\n  const randomPiece = pieces[Math.floor(Math.random() * pieces.length)];\r\n  nextPiece.value = SHAPES[randomPiece].shape;\r\n  nextColor.value = SHAPES[randomPiece].color;\r\n  \r\n  drawNextPiece();\r\n};\r\n\r\n// collision 함수 수정\r\nconst collision = (x = gameState.value.currentPieceX, \r\n                  y = gameState.value.currentPieceY, \r\n                  piece = gameState.value.currentPiece) => {\r\n  for (let r = 0; r < piece.length; r++) {\r\n    for (let c = 0; c < piece[r].length; c++) {\r\n      if (piece[r][c]) {\r\n        const newX = x + c;\r\n        const newY = y + r;\r\n        \r\n        if (newX < 0 || newX >= BOARD_WIDTH || newY >= BOARD_HEIGHT) {\r\n          return true;\r\n        }\r\n        \r\n        if (newY >= 0 && gameState.value.board[newY][newX]) {\r\n          // 블록이 맨 위에서 충돌하면 게임 오버\r\n          if (newY === 0) {\r\n            gameOver();\r\n            return true;\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst getGhostPosition = () => {\r\n  let ghostY = gameState.value.currentPieceY;\r\n  \r\n  while (!collision(gameState.value.currentPieceX, ghostY + 1, gameState.value.currentPiece)) {\r\n    ghostY++;\r\n  }\r\n  \r\n  return ghostY;\r\n};\r\n\r\n// drawBoard 함수 수정\r\nconst drawBoard = () => {\r\n  if (!ctx.value) return;\r\n  \r\n  // 배경 초기화\r\n  ctx.value.fillStyle = 'black';\r\n  ctx.value.fillRect(0, 0, gameBoard.value.width, gameBoard.value.height);\r\n\r\n  // 보드의 블록 그리기 (이미 놓여진 블록)\r\n  for (let y = 0; y < BOARD_HEIGHT; y++) {\r\n    for (let x = 0; x < BOARD_WIDTH; x++) {\r\n      if (gameState.value.board[y][x]) {\r\n        // 메인 블록 그리기\r\n        ctx.value.fillStyle = PLACED_BLOCK_COLOR;\r\n        ctx.value.fillRect(\r\n          x * BLOCK_SIZE, \r\n          y * BLOCK_SIZE, \r\n          BLOCK_SIZE - 1, \r\n          BLOCK_SIZE - 1\r\n        );\r\n        \r\n        // 블록의 위쪽과 왼쪽에 하이라이트 효과\r\n        ctx.value.fillStyle = '#008080';\r\n        ctx.value.fillRect(\r\n          x * BLOCK_SIZE, \r\n          y * BLOCK_SIZE, \r\n          BLOCK_SIZE - 1, \r\n          2\r\n        );\r\n        ctx.value.fillRect(\r\n          x * BLOCK_SIZE, \r\n          y * BLOCK_SIZE, \r\n          2, \r\n          BLOCK_SIZE - 1\r\n        );\r\n        \r\n        // 블록의 아래쪽과 오른쪽에 그림자 효과\r\n        ctx.value.fillStyle = '#004d4d';\r\n        ctx.value.fillRect(\r\n          x * BLOCK_SIZE, \r\n          (y + 1) * BLOCK_SIZE - 2, \r\n          BLOCK_SIZE - 1, \r\n          2\r\n        );\r\n        ctx.value.fillRect(\r\n          (x + 1) * BLOCK_SIZE - 2, \r\n          y * BLOCK_SIZE, \r\n          2, \r\n          BLOCK_SIZE - 1\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // 현재 떨어지는 블록 그리기\r\n  if (gameState.value.currentPiece) {\r\n    // 1000점 미만일 때만 그림자 표시\r\n    if (score.value < 1000) {\r\n      const ghostY = getGhostPosition();\r\n      ctx.value.fillStyle = `${currentColor.value}40`; // 40는 알파값 (25% 투명도)\r\n      for (let y = 0; y < gameState.value.currentPiece.length; y++) {\r\n        for (let x = 0; x < gameState.value.currentPiece[y].length; x++) {\r\n          if (gameState.value.currentPiece[y][x]) {\r\n            ctx.value.fillRect(\r\n              (gameState.value.currentPieceX + x) * BLOCK_SIZE,\r\n              (ghostY + y) * BLOCK_SIZE,\r\n              BLOCK_SIZE - 1,\r\n              BLOCK_SIZE - 1\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // 현재 블록 그리기 (떨어지는 중인 블록)\r\n    ctx.value.fillStyle = currentColor.value;\r\n    for (let y = 0; y < gameState.value.currentPiece.length; y++) {\r\n      for (let x = 0; x < gameState.value.currentPiece[y].length; x++) {\r\n        if (gameState.value.currentPiece[y][x]) {\r\n          // 메인 블록 그리기\r\n          ctx.value.fillRect(\r\n            (gameState.value.currentPieceX + x) * BLOCK_SIZE,\r\n            (gameState.value.currentPieceY + y) * BLOCK_SIZE,\r\n            BLOCK_SIZE - 1,\r\n            BLOCK_SIZE - 1\r\n          );\r\n          \r\n          // 네온 효과\r\n          ctx.value.shadowColor = currentColor.value;\r\n          ctx.value.shadowBlur = 5;\r\n          ctx.value.fillRect(\r\n            (gameState.value.currentPieceX + x) * BLOCK_SIZE,\r\n            (gameState.value.currentPieceY + y) * BLOCK_SIZE,\r\n            BLOCK_SIZE - 1,\r\n            BLOCK_SIZE - 1\r\n          );\r\n          ctx.value.shadowBlur = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// mergePiece 함수 수정\r\nconst mergePiece = () => {\r\n  for (let y = 0; y < gameState.value.currentPiece.length; y++) {\r\n    for (let x = 0; x < gameState.value.currentPiece[y].length; x++) {\r\n      if (gameState.value.currentPiece[y][x]) {\r\n        const boardY = gameState.value.currentPieceY + y;\r\n        const boardX = gameState.value.currentPieceX + x;\r\n        gameState.value.board[boardY][boardX] = PLACED_BLOCK_COLOR; // 고정된 색상 사용\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// 점수 업데이트 및 속도 조절 함수\r\nconst updateScore = (clearedLines) => {\r\n  const previousLevel = currentLevel.value;\r\n  \r\n  // 여러 줄 동시 제거 시 보너스 점수\r\n  switch(clearedLines) {\r\n    case 1: score.value += 100; break;\r\n    case 2: score.value += 300; break;\r\n    case 3: score.value += 500; break;\r\n    case 4: score.value += 800; break;\r\n  }\r\n  \r\n  // 레벨 계산 및 업데이트\r\n  currentLevel.value = Math.floor(score.value / 1000) + 1;\r\n  \r\n  // 레벨이 올랐을 때\r\n  if (currentLevel.value > previousLevel) {\r\n    const newSpeed = Math.max(\r\n      MIN_SPEED,\r\n      INITIAL_SPEED * Math.pow(SPEED_FACTOR, currentLevel.value - 1)\r\n    );\r\n    \r\n    if (gameInterval.value) {\r\n      clearInterval(gameInterval.value);\r\n      gameInterval.value = setInterval(gameLoop, newSpeed);\r\n      gameSpeed.value = newSpeed;\r\n      showLevelUpEffect(); // 레벨 업 효과 표시\r\n    }\r\n  }\r\n};\r\n\r\n// 레벨 업 이펙트 함수 수정\r\nconst showLevelUpEffect = () => {\r\n  showLevelUp.value = true;\r\n  setTimeout(() => {\r\n    showLevelUp.value = false;\r\n  }, 1000);\r\n};\r\n\r\n// checkLines 함수 완전 수정\r\nconst checkLines = () => {\r\n  let linesToRemove = [];\r\n  \r\n  // 완성된 라인 찾기 (아래에서부터 위로 검사)\r\n  for (let y = BOARD_HEIGHT - 1; y >= 0; y--) {\r\n    if (gameState.value.board[y].every(cell => cell !== 0)) {\r\n      linesToRemove.push(y);\r\n    }\r\n  }\r\n  \r\n  if (linesToRemove.length > 0) {\r\n    // 라인 제거 애니메이션\r\n    let flash = 0;\r\n    const flashInterval = setInterval(() => {\r\n      flash++;\r\n      \r\n      for (const y of linesToRemove) {\r\n        const color = flash % 2 === 0 ? '#FFFFFF' : '#FFFF00';\r\n        for (let x = 0; x < BOARD_WIDTH; x++) {\r\n          ctx.value.fillStyle = color;\r\n          ctx.value.fillRect(\r\n            x * BLOCK_SIZE,\r\n            y * BLOCK_SIZE,\r\n            BLOCK_SIZE - 1,\r\n            BLOCK_SIZE - 1\r\n          );\r\n        }\r\n      }\r\n      \r\n      if (flash >= 4) {\r\n        clearInterval(flashInterval);\r\n        \r\n        // 새로운 보드 배열 생성\r\n        let newBoard = Array(BOARD_HEIGHT).fill(null).map(() => Array(BOARD_WIDTH).fill(0));\r\n        let currentRow = BOARD_HEIGHT - 1;\r\n        \r\n        // 완성되지 않은 라인들만 아래에서부터 새 보드에 복사\r\n        for (let y = BOARD_HEIGHT - 1; y >= 0; y--) {\r\n          if (!linesToRemove.includes(y)) {\r\n            for (let x = 0; x < BOARD_WIDTH; x++) {\r\n              newBoard[currentRow][x] = gameState.value.board[y][x];\r\n            }\r\n            currentRow--;\r\n          }\r\n        }\r\n        \r\n        // 새 보드로 교체\r\n        gameState.value.board = newBoard;\r\n        \r\n        // 점수 업데이트 및 속도 조절\r\n        updateScore(linesToRemove.length);\r\n        drawBoard();\r\n      }\r\n    }, 100);\r\n  }\r\n};\r\n\r\nconst hardDrop = () => {\r\n  if (gameState.value.status !== 'playing') return;\r\n  \r\n  while (!collision()) {\r\n    gameState.value.currentPieceY++;\r\n  }\r\n  gameState.value.currentPieceY--;\r\n  mergePiece();\r\n  checkLines();\r\n  createPiece();\r\n  if (collision()) {\r\n    gameOver();\r\n    return;\r\n  }\r\n  drawBoard();\r\n};\r\n\r\n// 게임 오버 함수 수정\r\nconst gameOver = () => {\r\n  if (gameInterval.value) {\r\n    clearInterval(gameInterval.value);\r\n    gameInterval.value = null;\r\n  }\r\n  gameState.value.status = 'gameover';\r\n  drawBoard(); // 마지막 상태 그리기\r\n};\r\n\r\n// gameLoop 함수 수정\r\nconst gameLoop = () => {\r\n  if (gameState.value.status !== 'playing') return;\r\n  \r\n  gameState.value.currentPieceY++;\r\n  if (collision()) {\r\n    gameState.value.currentPieceY--;\r\n    mergePiece();\r\n    checkLines();\r\n    createPiece();\r\n    if (collision()) {\r\n      gameOver();\r\n      return;\r\n    }\r\n  }\r\n  drawBoard();\r\n};\r\n\r\n// 보드 초기화 함수도 수정\r\nconst initBoard = () => {\r\n  return Array(BOARD_HEIGHT).fill(null).map(() => Array(BOARD_WIDTH).fill(0));\r\n};\r\n\r\n// 게임 시작 함수에서 보드 초기화 부분 수정\r\nconst startGame = () => {\r\n  gameState.value.board = initBoard();\r\n  score.value = 0;\r\n  currentLevel.value = 1;\r\n  showLevelUp.value = false;\r\n  gameSpeed.value = INITIAL_SPEED;\r\n  nextPiece.value = null;\r\n  gameState.value.status = 'playing';\r\n  createPiece();\r\n  if (gameInterval.value) clearInterval(gameInterval.value);\r\n  gameInterval.value = setInterval(gameLoop, gameSpeed.value);\r\n};\r\n\r\n// 키 입력 처리 함수 수정\r\nconst handleKeydown = (e) => {\r\n  // 스페이스바 스크롤 방지\r\n  if (e.key === ' ') {\r\n    e.preventDefault();\r\n  }\r\n  \r\n  // ESC 또는 P 키로 일시정지\r\n  if (e.key === 'Escape' || e.key === 'p' || e.key === 'P') {\r\n    if (gameState.value.status === 'playing' || \r\n        gameState.value.status === 'paused') {\r\n      togglePause();\r\n      return;\r\n    }\r\n  }\r\n  \r\n  // 일시정지 상태에서는 다른 키 입력 무시\r\n  if (gameState.value.status !== 'playing') {\r\n    return;\r\n  }\r\n  \r\n  e.preventDefault();\r\n  \r\n  switch (e.key) {\r\n    case 'ArrowLeft':\r\n      gameState.value.currentPieceX--;\r\n      if (collision()) gameState.value.currentPieceX++;\r\n      break;\r\n    case 'ArrowRight':\r\n      gameState.value.currentPieceX++;\r\n      if (collision()) gameState.value.currentPieceX--;\r\n      break;\r\n    case 'ArrowDown':\r\n      gameState.value.currentPieceY++;\r\n      if (collision()) gameState.value.currentPieceY--;\r\n      break;\r\n    case 'ArrowUp': {\r\n        const rotated = gameState.value.currentPiece[0].map((_, i) => \r\n          gameState.value.currentPiece.map(row => row[i]).reverse()\r\n        );\r\n        const previousPiece = gameState.value.currentPiece;\r\n        gameState.value.currentPiece = rotated;\r\n        if (collision()) gameState.value.currentPiece = previousPiece;\r\n      }\r\n      break;\r\n    case ' ':\r\n      hardDrop();\r\n      break;\r\n  }\r\n  \r\n  drawBoard();\r\n};\r\n\r\n// 다음 블록 그리기 함수\r\nconst drawNextPiece = () => {\r\n  if (!nextPieceCanvas.value || !nextPiece.value) return;\r\n  \r\n  const ctx = nextPieceCanvas.value.getContext('2d');\r\n  const blockSize = 25;\r\n  \r\n  ctx.clearRect(0, 0, nextPieceCanvas.value.width, nextPieceCanvas.value.height);\r\n  \r\n  const offsetX = (nextPieceCanvas.value.width - nextPiece.value[0].length * blockSize) / 2;\r\n  const offsetY = (nextPieceCanvas.value.height - nextPiece.value.length * blockSize) / 2;\r\n  \r\n  ctx.fillStyle = nextColor.value;\r\n  for (let y = 0; y < nextPiece.value.length; y++) {\r\n    for (let x = 0; x < nextPiece.value[y].length; x++) {\r\n      if (nextPiece.value[y][x]) {\r\n        ctx.fillRect(\r\n          offsetX + x * blockSize,\r\n          offsetY + y * blockSize,\r\n          blockSize - 1,\r\n          blockSize - 1\r\n        );\r\n        \r\n        // 네온 효과\r\n        ctx.shadowColor = nextColor.value;\r\n        ctx.shadowBlur = 10;\r\n        ctx.fillRect(\r\n          offsetX + x * blockSize,\r\n          offsetY + y * blockSize,\r\n          blockSize - 1,\r\n          blockSize - 1\r\n        );\r\n        ctx.shadowBlur = 0;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// 색상을 어둡게 만드는 헬퍼 함수\r\nconst shadeColor = (color, percent) => {\r\n  const num = parseInt(color.replace('#', ''), 16);\r\n  const amt = Math.round(2.55 * percent);\r\n  const R = (num >> 16) + amt;\r\n  const G = (num >> 8 & 0x00FF) + amt;\r\n  const B = (num & 0x0000FF) + amt;\r\n  return `#${(\r\n    0x1000000 +\r\n    (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n    (G < 255 ? (G < 1 ? 0 : G) : 255) * 0x100 +\r\n    (B < 255 ? (B < 1 ? 0 : B) : 255)\r\n  ).toString(16).slice(1)}`;\r\n};\r\n\r\n// 일시정지 처리 함수\r\nconst togglePause = () => {\r\n  if (gameState.value.status === 'playing') {\r\n    gameState.value.status = 'paused';\r\n    clearInterval(gameInterval.value);\r\n    gameInterval.value = null;\r\n  } else if (gameState.value.status === 'paused') {\r\n    gameState.value.status = 'playing';\r\n    gameInterval.value = setInterval(gameLoop, gameSpeed.value);\r\n  }\r\n};\r\n\r\n// 라이프사이클 훅\r\nonMounted(() => {\r\n  ctx.value = gameBoard.value.getContext('2d');\r\n  // 전역 이벤트 리스너로 변경\r\n  window.addEventListener('keydown', handleKeydown, { passive: false });\r\n  gameState.value.status = 'ready';\r\n  drawBoard();\r\n});\r\n\r\nonUnmounted(() => {\r\n  if (gameInterval.value) clearInterval(gameInterval.value);\r\n  window.removeEventListener('keydown', handleKeydown);\r\n});\r\n</script>","import script from \"./FunTetris.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FunTetris.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FunTetris.vue?vue&type=style&index=0&id=403c1ca4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-403c1ca4\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\r\nimport Pika from '../components/Home/HelloWorld.vue';\r\nimport DateWizard from '../components/Tool/DateWizard/DateWizard.vue'\r\nimport Tetris from '../components/Fun/Tetris/FunTetris.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Pika',\r\n    component: Pika,\r\n    meta: {\r\n        korean: '따옴표🧙‍♂️'\r\n    }\r\n  },\r\n  {\r\n    path: '/DateWizard',\r\n    name: 'DateWizard',\r\n    component: DateWizard,\r\n    meta: {\r\n        korean: '날짜🧙‍♂️'\r\n    }\r\n  },\r\n  {\r\n    path: '/Tetris',\r\n    name: 'Tetris',\r\n    component: Tetris,\r\n    meta: {\r\n        korean: '벽돌💫'\r\n    }\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nexport default router;","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport 'element-plus/theme-chalk/dark/css-vars.css'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport App from './App.vue'\nimport router from './router'\n\nconst app = createApp(App)\nfor(const [key, component] of Object.entries(ElementPlusIconsVue)) {\n    app.component(key, component)\n}\n\napp.use(router)\napp.use(ElementPlus)\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkora_wizard\"] = self[\"webpackChunkora_wizard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(5744); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["route","useRoute","routerName","ref","routerPath","path","isCollapsed","watch","meta","korean","newName","newPath","value","open","ElMessage","message","type","icon","menuItems","name","clickable","__exports__","iframeUrl","DateUtil","constructor","text","originVal","format","color","this","getQuery","key","item","_assertClassBrand","_query","_","find","obj","changeDate","val","formmater","replace","hex","hue","Math","floor","random","saturation","lightness","hslToHex","h","s","l","k","n","a","min","f","max","toHex","x","round","toString","padStart","r","g","b","toSpan","parts","split","result","toText","rdoValType","input1","today","Date","resultValue","resultText","changeHistory","changeHistoryKR","copiedStates","selectedOption","length","at","html","changeToCharFormat","copyToClipboard","navigator","clipboard","writeText","then","setTimeout","catch","err","console","error","refresh","changeRadio","push","plainText","undo","pop","BLOCK_SIZE","BOARD_WIDTH","BOARD_HEIGHT","INITIAL_SPEED","MIN_SPEED","SPEED_FACTOR","PLACED_BLOCK_COLOR","SHAPES","I","shape","O","T","L","J","S","Z","gameBoard","ctx","score","gameInterval","gameState","board","Array","fill","map","currentPiece","currentPieceX","currentPieceY","status","nextPiece","nextPieceCanvas","gameSpeed","currentColor","nextColor","currentLevel","showLevelUp","createPiece","pieces","Object","keys","randomPiece","drawNextPiece","collision","y","piece","c","newX","newY","gameOver","getGhostPosition","ghostY","drawBoard","fillStyle","fillRect","width","height","shadowColor","shadowBlur","mergePiece","boardY","boardX","updateScore","clearedLines","previousLevel","newSpeed","pow","clearInterval","setInterval","gameLoop","showLevelUpEffect","checkLines","linesToRemove","every","cell","flash","flashInterval","newBoard","currentRow","includes","hardDrop","initBoard","startGame","handleKeydown","e","preventDefault","rotated","i","row","reverse","previousPiece","togglePause","getContext","blockSize","clearRect","offsetX","offsetY","onMounted","window","addEventListener","passive","onUnmounted","removeEventListener","routes","component","Pika","DateWizard","Tetris","router","createRouter","history","createWebHistory","process","app","createApp","App","entries","ElementPlusIconsVue","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","getter","__esModule","d","definition","o","defineProperty","enumerable","get","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}